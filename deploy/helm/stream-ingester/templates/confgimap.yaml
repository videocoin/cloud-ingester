apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
data:
  nginx.conf: |
    include includes/base.conf;
    include includes/env.conf;
    include includes/rtmp.conf;
    include includes/http.conf;
  base.conf: |
    daemon off;
    user www-data;
    worker_processes 4;
    events {
        worker_connections 1024;
    }
    error_log /dev/stdout info;
  env.conf: |
    env POD_IP;
    env LP_CAMERA_HTTPADDR;
    env LP_MANAGER_ADDR;
    env LP_VIDEOUPLOADER_ADDR;
    env LP_STREAMINGESTER_PORT;
  rtmp.conf: |
    rtmp_auto_push on;
    rtmp_auto_push_reconnect 1000ms;

    rtmp {
        server {
            listen 1935;

            chunk_size 4096;
            max_message 16M;

            application camera {
                live on;
                meta copy;

                record_path /tmp/records;
                record_unique on;

                notify_method         get;
                notify_update_timeout 5s;
                notify_update_strict  on;
                notify_send_redirect  on;
                notify_relay_redirect on;

                # on_connect       http://localhost/hook;
                on_play          http://localhost/hook;
                on_playlist      http://localhost/hook;
                on_publish       http://localhost/hook/publish;
                on_done          http://localhost/hook;
                on_play_done     http://localhost/hook;
                on_publish_done  http://localhost/hook/publish_done;
                # on_record_done   http://localhost/hook/record_done;
                on_update        http://localhost/hook/update_publish;

                recorder preview {
                    record keyframes;
                    record_max_frames 10;
                    record_interval 5s;
                    record_suffix .thumb;

                    exec_record_done ffmpeg -i $path -vframes 1 -an -f image2 -s 320x240 -y /tmp/records/$name.jpg;
                }

                hls on;
                hls_type live;
                hls_fragment 2s;
                hls_playlist_length 60s;
                hls_path /tmp/hls;
                hls_cleanup on;
                hls_continuous off;
                hls_nested on;
            }
        }
    }
  http.conf: |
    http {
        include includes/resolver.conf;
        include includes/init_lua.conf;

        server {
            set_by_lua $port 'return os.getenv("LP_STREAMINGESTER_PORT")';
            set_by_lua $pod_ip 'return os.getenv("POD_IP")';

            listen *:80;
            server_name localhost;

            include includes/metrics.conf;
            include includes/storage.conf;
            include includes/hook.conf;
            include includes/cameras_api.conf;
            include includes/videouploader_api.conf;
            include includes/private_api.conf;
        }
    }
  metrics.conf: |
    location /stat.json {
        # internal;
        add_header Content-Type application/json;
        rtmp_stat all;
        # rtmp_stat_format json;
    }

    location /stat.xml {
        # internal;
        add_header Content-Type application/xml;
        rtmp_stat all;
        # rtmp_stat_format xml;
    }

    location /monitor {
        rtmp_stat all;
        rtmp_stat_stylesheet stat.xsl;
    }

    location /stat.xsl {
        # internal;
        root /opt/stream-ingester/var/lib/nginx;
    }

    location /metrics {
        default_type text/plain;    
        content_by_lua_file /opt/stream-ingester/src/metrics.lua;
    }
  storage.conf: |
    # location /records {
    #     add_header Cache-Control no-cache;

    #     alias /tmp/records;
    # }

    # location /previews {
    #     add_header Cache-Control no-cache;

    #     alias /tmp/previews;
    # }

    location /hls {
        include includes/cors.conf;

        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
        }
        add_header Cache-Control no-cache;
        root /tmp;
    }

    location /records {
        types {
            video/mp4 mp4;
            video/x-flv flv;
        }
        add_header Cache-Control no-cache;
        root /tmp;
    }

    location /previews {
        include includes/cors.conf;

        types {
            image/jpeg jpe;
            image/jpeg jpeg;
            image/jpeg jpg;
            image/png png;
        }

        add_header Cache-Control no-cache;

        # root /tmp;
        alias /tmp/records;

        error_page 404 http://cloud.liveplanetstage.net/assets/img/general/camera_preview.png;
    }
  hook.conf: |
    location /hook {
        default_type text/plain;
        return 200;
    }

    location /hook/publish {
        default_type text/plain;
        content_by_lua_file /opt/stream-ingester/src/hooks/publish.lua;
    }

    location /hook/publish_done {
        default_type text/plain;
        content_by_lua_file /opt/stream-ingester/src/hooks/publish_done.lua;
    }

    location /hook/update_publish {
        default_type text/plain;
        content_by_lua_file /opt/stream-ingester/src/hooks/update_publish.lua;
    }
  cameras_api.conf: |
    location ~* /api/v1/cameras/[a-z0-9\-]+/onair {
        set_by_lua $cameras_http_addr 'return os.getenv("LP_CAMERA_HTTPADDR")';

        access_by_lua_block {
            if ngx.req.get_method() ~= "POST" then
                ngx.exit(ngx.HTTP_NOT_ALLOWED)
            end
        }

        proxy_pass http://$cameras_http_addr;
        break;
    }
  videouploader_api.conf: |
    location ~* /api/v1/records {
        set_by_lua $videouploader_addr 'return os.getenv("LP_VIDEOUPLOADER_ADDR")';

        access_by_lua_block {
            if ngx.req.get_method() ~= "POST" then
                ngx.exit(ngx.HTTP_NOT_ALLOWED)
            end
        }

        proxy_pass http://$videouploader_addr;
        break;
    }
  private_api.conf: |
    location ~* /api/private/v1/users {
        set_by_lua $manager_addr 'return os.getenv("LP_MANAGER_ADDR")';

        access_by_lua_block {
            if ngx.req.get_method() ~= "GET" then
                ngx.exit(ngx.HTTP_NOT_ALLOWED)
            end
        }

        proxy_pass http://$manager_addr;
        break;
    }
  resolver.conf: |
    resolver 127.0.0.1:53 valid=10s ipv6=off;
    resolver_timeout 5s;
  init_lua.conf: |
    lua_package_path "/opt/stream-ingester/src/nginx/nginx-lua-prometheus/?.lua;";
    lua_shared_dict prometheus_metrics 10M;
    init_by_lua_file /opt/stream-ingester/src/init.lua;
  cors.conf: |
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }

    if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
    }

    if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
    }