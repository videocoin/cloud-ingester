# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from liveplanet.api.proto import camera_cloud_pb2 as camera__cloud__pb2
from liveplanet.api.proto import camera_core_pb2 as camera__core__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class CameraCloudServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterCamera = channel.unary_unary(
        '/proto.CameraCloudService/RegisterCamera',
        request_serializer=camera__cloud__pb2.RegisterCameraRequest.SerializeToString,
        response_deserializer=camera__cloud__pb2.Camera.FromString,
        )
    self.GetCamera = channel.unary_unary(
        '/proto.CameraCloudService/GetCamera',
        request_serializer=camera__cloud__pb2.GetCameraRequest.SerializeToString,
        response_deserializer=camera__cloud__pb2.Camera.FromString,
        )
    self.DeleteCamera = channel.unary_unary(
        '/proto.CameraCloudService/DeleteCamera',
        request_serializer=camera__cloud__pb2.DeleteCameraRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.UpdateCamera = channel.unary_unary(
        '/proto.CameraCloudService/UpdateCamera',
        request_serializer=camera__cloud__pb2.UpdateCameraRequest.SerializeToString,
        response_deserializer=camera__cloud__pb2.Camera.FromString,
        )
    self.GetCamerasList = channel.unary_unary(
        '/proto.CameraCloudService/GetCamerasList',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=camera__cloud__pb2.GetCamerasListResponse.FromString,
        )
    self.CreateStream = channel.unary_unary(
        '/proto.CameraCloudService/CreateStream',
        request_serializer=camera__cloud__pb2.CreateCameraStreamRequest.SerializeToString,
        response_deserializer=camera__cloud__pb2.Stream.FromString,
        )
    self.GetCameraStreamsList = channel.unary_unary(
        '/proto.CameraCloudService/GetCameraStreamsList',
        request_serializer=camera__cloud__pb2.GetCameraStreamsListRequest.SerializeToString,
        response_deserializer=camera__cloud__pb2.Streams.FromString,
        )
    self.CompleteStream = channel.unary_unary(
        '/proto.CameraCloudService/CompleteStream',
        request_serializer=camera__cloud__pb2.CompleteCameraStreamRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.RemoteControl = channel.stream_stream(
        '/proto.CameraCloudService/RemoteControl',
        request_serializer=camera__cloud__pb2.UpdateStateCameraRequest.SerializeToString,
        response_deserializer=camera__core__pb2.State.FromString,
        )


class CameraCloudServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RegisterCamera(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCamera(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteCamera(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateCamera(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCamerasList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCameraStreamsList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CompleteStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoteControl(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CameraCloudServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterCamera': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterCamera,
          request_deserializer=camera__cloud__pb2.RegisterCameraRequest.FromString,
          response_serializer=camera__cloud__pb2.Camera.SerializeToString,
      ),
      'GetCamera': grpc.unary_unary_rpc_method_handler(
          servicer.GetCamera,
          request_deserializer=camera__cloud__pb2.GetCameraRequest.FromString,
          response_serializer=camera__cloud__pb2.Camera.SerializeToString,
      ),
      'DeleteCamera': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteCamera,
          request_deserializer=camera__cloud__pb2.DeleteCameraRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'UpdateCamera': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateCamera,
          request_deserializer=camera__cloud__pb2.UpdateCameraRequest.FromString,
          response_serializer=camera__cloud__pb2.Camera.SerializeToString,
      ),
      'GetCamerasList': grpc.unary_unary_rpc_method_handler(
          servicer.GetCamerasList,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=camera__cloud__pb2.GetCamerasListResponse.SerializeToString,
      ),
      'CreateStream': grpc.unary_unary_rpc_method_handler(
          servicer.CreateStream,
          request_deserializer=camera__cloud__pb2.CreateCameraStreamRequest.FromString,
          response_serializer=camera__cloud__pb2.Stream.SerializeToString,
      ),
      'GetCameraStreamsList': grpc.unary_unary_rpc_method_handler(
          servicer.GetCameraStreamsList,
          request_deserializer=camera__cloud__pb2.GetCameraStreamsListRequest.FromString,
          response_serializer=camera__cloud__pb2.Streams.SerializeToString,
      ),
      'CompleteStream': grpc.unary_unary_rpc_method_handler(
          servicer.CompleteStream,
          request_deserializer=camera__cloud__pb2.CompleteCameraStreamRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'RemoteControl': grpc.stream_stream_rpc_method_handler(
          servicer.RemoteControl,
          request_deserializer=camera__cloud__pb2.UpdateStateCameraRequest.FromString,
          response_serializer=camera__core__pb2.State.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.CameraCloudService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
