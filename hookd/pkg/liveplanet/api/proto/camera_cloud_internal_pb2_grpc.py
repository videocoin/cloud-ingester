# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from liveplanet.api.proto import camera_cloud_internal_pb2 as camera__cloud__internal__pb2


class CameraCloudInternalServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetCamera = channel.unary_unary(
        '/proto.CameraCloudInternalService/GetCamera',
        request_serializer=camera__cloud__internal__pb2.InternalCameraRequest.SerializeToString,
        response_deserializer=camera__cloud__internal__pb2.InternalCameraResponse.FromString,
        )
    self.GetCameras = channel.unary_unary(
        '/proto.CameraCloudInternalService/GetCameras',
        request_serializer=camera__cloud__internal__pb2.InternalCameraListRequest.SerializeToString,
        response_deserializer=camera__cloud__internal__pb2.InternalCameraListResponse.FromString,
        )
    self.GetActiveStreams = channel.unary_unary(
        '/proto.CameraCloudInternalService/GetActiveStreams',
        request_serializer=camera__cloud__internal__pb2.InternalStreamListRequest.SerializeToString,
        response_deserializer=camera__cloud__internal__pb2.InternalStreamListResponse.FromString,
        )
    self.StartLiveStreaming = channel.unary_unary(
        '/proto.CameraCloudInternalService/StartLiveStreaming',
        request_serializer=camera__cloud__internal__pb2.InternalLiveStreamingRequest.SerializeToString,
        response_deserializer=camera__cloud__internal__pb2.InternalLiveStreamingResponse.FromString,
        )
    self.StopLiveStreaming = channel.unary_unary(
        '/proto.CameraCloudInternalService/StopLiveStreaming',
        request_serializer=camera__cloud__internal__pb2.InternalLiveStreamingRequest.SerializeToString,
        response_deserializer=camera__cloud__internal__pb2.InternalLiveStreamingResponse.FromString,
        )
    self.MarkCameraAsOnAir = channel.unary_unary(
        '/proto.CameraCloudInternalService/MarkCameraAsOnAir',
        request_serializer=camera__cloud__internal__pb2.InternalCameraRequest.SerializeToString,
        response_deserializer=camera__cloud__internal__pb2.InternalCameraResponse.FromString,
        )
    self.MarkCameraAsOffAir = channel.unary_unary(
        '/proto.CameraCloudInternalService/MarkCameraAsOffAir',
        request_serializer=camera__cloud__internal__pb2.InternalCameraRequest.SerializeToString,
        response_deserializer=camera__cloud__internal__pb2.InternalCameraResponse.FromString,
        )


class CameraCloudInternalServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetCamera(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCameras(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetActiveStreams(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartLiveStreaming(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopLiveStreaming(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MarkCameraAsOnAir(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MarkCameraAsOffAir(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CameraCloudInternalServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetCamera': grpc.unary_unary_rpc_method_handler(
          servicer.GetCamera,
          request_deserializer=camera__cloud__internal__pb2.InternalCameraRequest.FromString,
          response_serializer=camera__cloud__internal__pb2.InternalCameraResponse.SerializeToString,
      ),
      'GetCameras': grpc.unary_unary_rpc_method_handler(
          servicer.GetCameras,
          request_deserializer=camera__cloud__internal__pb2.InternalCameraListRequest.FromString,
          response_serializer=camera__cloud__internal__pb2.InternalCameraListResponse.SerializeToString,
      ),
      'GetActiveStreams': grpc.unary_unary_rpc_method_handler(
          servicer.GetActiveStreams,
          request_deserializer=camera__cloud__internal__pb2.InternalStreamListRequest.FromString,
          response_serializer=camera__cloud__internal__pb2.InternalStreamListResponse.SerializeToString,
      ),
      'StartLiveStreaming': grpc.unary_unary_rpc_method_handler(
          servicer.StartLiveStreaming,
          request_deserializer=camera__cloud__internal__pb2.InternalLiveStreamingRequest.FromString,
          response_serializer=camera__cloud__internal__pb2.InternalLiveStreamingResponse.SerializeToString,
      ),
      'StopLiveStreaming': grpc.unary_unary_rpc_method_handler(
          servicer.StopLiveStreaming,
          request_deserializer=camera__cloud__internal__pb2.InternalLiveStreamingRequest.FromString,
          response_serializer=camera__cloud__internal__pb2.InternalLiveStreamingResponse.SerializeToString,
      ),
      'MarkCameraAsOnAir': grpc.unary_unary_rpc_method_handler(
          servicer.MarkCameraAsOnAir,
          request_deserializer=camera__cloud__internal__pb2.InternalCameraRequest.FromString,
          response_serializer=camera__cloud__internal__pb2.InternalCameraResponse.SerializeToString,
      ),
      'MarkCameraAsOffAir': grpc.unary_unary_rpc_method_handler(
          servicer.MarkCameraAsOffAir,
          request_deserializer=camera__cloud__internal__pb2.InternalCameraRequest.FromString,
          response_serializer=camera__cloud__internal__pb2.InternalCameraResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.CameraCloudInternalService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
