// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: upload_tasks.proto

/*
	Package proto is a generated protocol buffer package.

	It is generated from these files:
		upload_tasks.proto

	It has these top-level messages:
		SocialUploadTask
		SocialCancelTask
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/mwitkow/go-proto-validators"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type PlatformType int32

const (
	youtube  PlatformType = 0
	facebook PlatformType = 1
)

var PlatformType_name = map[int32]string{
	0: "YOUTUBE",
	1: "FACEBOOK",
}
var PlatformType_value = map[string]int32{
	"YOUTUBE":  0,
	"FACEBOOK": 1,
}

func (x PlatformType) String() string {
	return proto1.EnumName(PlatformType_name, int32(x))
}
func (PlatformType) EnumDescriptor() ([]byte, []int) { return fileDescriptorUploadTasks, []int{0} }

type SocialUploadTask struct {
	BroadcastId string       `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	Url         string       `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Credentials string       `protobuf:"bytes,3,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Name        string       `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Tags        string       `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
	Platform    PlatformType `protobuf:"varint,6,opt,name=platform,proto3,enum=proto.PlatformType" json:"platform,omitempty"`
	VideoId     string       `protobuf:"bytes,7,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (m *SocialUploadTask) Reset()                    { *m = SocialUploadTask{} }
func (m *SocialUploadTask) String() string            { return proto1.CompactTextString(m) }
func (*SocialUploadTask) ProtoMessage()               {}
func (*SocialUploadTask) Descriptor() ([]byte, []int) { return fileDescriptorUploadTasks, []int{0} }

func (m *SocialUploadTask) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *SocialUploadTask) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *SocialUploadTask) GetCredentials() string {
	if m != nil {
		return m.Credentials
	}
	return ""
}

func (m *SocialUploadTask) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SocialUploadTask) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *SocialUploadTask) GetPlatform() PlatformType {
	if m != nil {
		return m.Platform
	}
	return youtube
}

func (m *SocialUploadTask) GetVideoId() string {
	if m != nil {
		return m.VideoId
	}
	return ""
}

type SocialCancelTask struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *SocialCancelTask) Reset()                    { *m = SocialCancelTask{} }
func (m *SocialCancelTask) String() string            { return proto1.CompactTextString(m) }
func (*SocialCancelTask) ProtoMessage()               {}
func (*SocialCancelTask) Descriptor() ([]byte, []int) { return fileDescriptorUploadTasks, []int{1} }

func (m *SocialCancelTask) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto1.RegisterType((*SocialUploadTask)(nil), "proto.SocialUploadTask")
	proto1.RegisterType((*SocialCancelTask)(nil), "proto.SocialCancelTask")
	proto1.RegisterEnum("proto.PlatformType", PlatformType_name, PlatformType_value)
}
func (m *SocialUploadTask) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SocialUploadTask) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.BroadcastId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintUploadTasks(dAtA, i, uint64(len(m.BroadcastId)))
		i += copy(dAtA[i:], m.BroadcastId)
	}
	if len(m.Url) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintUploadTasks(dAtA, i, uint64(len(m.Url)))
		i += copy(dAtA[i:], m.Url)
	}
	if len(m.Credentials) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintUploadTasks(dAtA, i, uint64(len(m.Credentials)))
		i += copy(dAtA[i:], m.Credentials)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintUploadTasks(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Tags) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintUploadTasks(dAtA, i, uint64(len(m.Tags)))
		i += copy(dAtA[i:], m.Tags)
	}
	if m.Platform != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintUploadTasks(dAtA, i, uint64(m.Platform))
	}
	if len(m.VideoId) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintUploadTasks(dAtA, i, uint64(len(m.VideoId)))
		i += copy(dAtA[i:], m.VideoId)
	}
	return i, nil
}

func (m *SocialCancelTask) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SocialCancelTask) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintUploadTasks(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	return i, nil
}

func encodeFixed64UploadTasks(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32UploadTasks(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintUploadTasks(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *SocialUploadTask) Size() (n int) {
	var l int
	_ = l
	l = len(m.BroadcastId)
	if l > 0 {
		n += 1 + l + sovUploadTasks(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovUploadTasks(uint64(l))
	}
	l = len(m.Credentials)
	if l > 0 {
		n += 1 + l + sovUploadTasks(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovUploadTasks(uint64(l))
	}
	l = len(m.Tags)
	if l > 0 {
		n += 1 + l + sovUploadTasks(uint64(l))
	}
	if m.Platform != 0 {
		n += 1 + sovUploadTasks(uint64(m.Platform))
	}
	l = len(m.VideoId)
	if l > 0 {
		n += 1 + l + sovUploadTasks(uint64(l))
	}
	return n
}

func (m *SocialCancelTask) Size() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovUploadTasks(uint64(l))
	}
	return n
}

func sovUploadTasks(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozUploadTasks(x uint64) (n int) {
	return sovUploadTasks(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SocialUploadTask) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUploadTasks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SocialUploadTask: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SocialUploadTask: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BroadcastId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUploadTasks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUploadTasks
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BroadcastId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUploadTasks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUploadTasks
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUploadTasks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUploadTasks
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Credentials = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUploadTasks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUploadTasks
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUploadTasks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUploadTasks
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tags = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			m.Platform = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUploadTasks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Platform |= (PlatformType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUploadTasks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUploadTasks
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VideoId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUploadTasks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthUploadTasks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SocialCancelTask) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUploadTasks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SocialCancelTask: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SocialCancelTask: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUploadTasks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUploadTasks
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUploadTasks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthUploadTasks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipUploadTasks(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowUploadTasks
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUploadTasks
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUploadTasks
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthUploadTasks
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowUploadTasks
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipUploadTasks(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthUploadTasks = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowUploadTasks   = fmt.Errorf("proto: integer overflow")
)

func init() { proto1.RegisterFile("upload_tasks.proto", fileDescriptorUploadTasks) }

var fileDescriptorUploadTasks = []byte{
	// 392 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x41, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x3b, 0xdd, 0xee, 0x26, 0x4e, 0xcb, 0x12, 0xc6, 0x4b, 0x36, 0x48, 0x88, 0x3d, 0x2d,
	0x42, 0x1b, 0x50, 0xf0, 0x6e, 0x97, 0x15, 0x57, 0x0f, 0x95, 0xb5, 0x3d, 0xe8, 0xa5, 0xbc, 0x64,
	0xa6, 0x71, 0xc8, 0x24, 0x2f, 0x24, 0x93, 0x96, 0x7e, 0x03, 0xe9, 0x27, 0xf0, 0xd2, 0x93, 0x5f,
	0xc6, 0xa3, 0x5f, 0x40, 0x90, 0xfa, 0x45, 0x24, 0x93, 0x1a, 0x7a, 0x9a, 0xff, 0xfb, 0xbd, 0xff,
	0x7b, 0xbc, 0x3f, 0x43, 0x59, 0x5d, 0x28, 0x04, 0xbe, 0xd2, 0x50, 0xa5, 0xd5, 0xb4, 0x28, 0x51,
	0x23, 0xbb, 0x34, 0x8f, 0xf7, 0x2c, 0x41, 0x4c, 0x94, 0x08, 0xa1, 0x90, 0x21, 0xe4, 0x39, 0x6a,
	0xd0, 0x12, 0xf3, 0x93, 0xc9, 0x9b, 0x24, 0x52, 0x7f, 0xad, 0xa3, 0x69, 0x8c, 0x59, 0x98, 0x60,
	0x82, 0xa1, 0xc1, 0x51, 0xbd, 0x36, 0x95, 0x29, 0x8c, 0x3a, 0xd9, 0x5f, 0x9f, 0xd9, 0xb3, 0xad,
	0xd4, 0x29, 0x6e, 0xc3, 0x04, 0x27, 0xa6, 0x39, 0xd9, 0x80, 0x92, 0x1c, 0x34, 0x96, 0x55, 0xd8,
	0xc9, 0x76, 0x6e, 0xfc, 0x9b, 0x50, 0xe7, 0x13, 0xc6, 0x12, 0xd4, 0xd2, 0x1c, 0xba, 0x80, 0x2a,
	0x65, 0xcf, 0xe9, 0x28, 0x2a, 0x11, 0x78, 0x0c, 0x95, 0x5e, 0x49, 0xee, 0x92, 0x80, 0xdc, 0x3e,
	0x79, 0x1c, 0x76, 0xec, 0x81, 0x33, 0x87, 0x5e, 0xd4, 0xa5, 0x72, 0xfb, 0xa6, 0xd3, 0x48, 0x16,
	0xd0, 0x61, 0x5c, 0x0a, 0x2e, 0x72, 0x2d, 0x41, 0x55, 0xee, 0x45, 0x3b, 0x73, 0x86, 0x18, 0xa3,
	0x83, 0x1c, 0x32, 0xe1, 0x0e, 0x4c, 0xcb, 0xe8, 0x86, 0x69, 0x48, 0x2a, 0xf7, 0xb2, 0x65, 0x8d,
	0x66, 0x21, 0xb5, 0x0b, 0x05, 0x7a, 0x8d, 0x65, 0xe6, 0x5e, 0x05, 0xe4, 0xf6, 0xfa, 0xe5, 0xd3,
	0xf6, 0xda, 0xe9, 0xc7, 0x13, 0x5e, 0xec, 0x0a, 0xf1, 0xd8, 0x99, 0xd8, 0x0d, 0xb5, 0x37, 0x92,
	0x0b, 0x6c, 0x6e, 0xb5, 0xcc, 0x22, 0xcb, 0xd4, 0x0f, 0x7c, 0x3c, 0xfe, 0x1f, 0xef, 0x0e, 0xf2,
	0x58, 0x28, 0x13, 0xef, 0x9a, 0xf6, 0xbb, 0x50, 0x7d, 0xc9, 0x5f, 0xbc, 0xa7, 0xa3, 0xf3, 0xc5,
	0xcc, 0xa5, 0xd6, 0xe7, 0xf9, 0x72, 0xb1, 0x9c, 0xdd, 0x3b, 0x3d, 0x6f, 0xb8, 0x3f, 0x04, 0xd6,
	0x0e, 0x6b, 0x5d, 0x47, 0x82, 0x79, 0xd4, 0x7e, 0xfb, 0xe6, 0xee, 0x7e, 0x36, 0x9f, 0x7f, 0x70,
	0x88, 0x37, 0xda, 0x1f, 0x02, 0x7b, 0x0d, 0xb1, 0x88, 0x10, 0x53, 0x6f, 0xf0, 0xed, 0x87, 0xdf,
	0x9b, 0xdd, 0xfc, 0x3c, 0xfa, 0xe4, 0xd7, 0xd1, 0x27, 0x7f, 0x8e, 0x3e, 0xf9, 0xfe, 0xd7, 0xef,
	0xbd, 0x23, 0x5f, 0xda, 0xff, 0x8e, 0xae, 0xcc, 0xf3, 0xea, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xfb, 0x71, 0xad, 0x94, 0x13, 0x02, 0x00, 0x00,
}
