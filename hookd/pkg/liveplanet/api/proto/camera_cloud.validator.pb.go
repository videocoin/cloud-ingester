// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: camera_cloud.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	camera_cloud.proto
	camera_core.proto

It has these top-level messages:
	RegisterCameraRequest
	GetCameraRequest
	DeleteCameraRequest
	UpdateCameraRequest
	GetCamerasListResponse
	CameraItemResponse
	Camera
	CreateCameraStreamRequest
	GetCameraStreamsListRequest
	CompleteCameraStreamRequest
	Stream
	Streams
	UpdateStateCameraRequest
	RTMPPoint
	Preview
	Output
	Encode
	Quality
	Point
	Picture
	Curve
	Notification
	AudioDevice
	AudioDevices
	Calibration
	Calibrations
	HDR
	Storage
	WifiNetwork
	Network
	Software
	FOV
	State
*/
package proto

import regexp "regexp"
import fmt "fmt"
import github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto1 "github.com/gogo/protobuf/proto"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/mwitkow/go-proto-validators"

import time "time"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

var _regex_RegisterCameraRequest_Id = regexp.MustCompile("^[a-fA-F0-9]{12}")

func (this *RegisterCameraRequest) Validate() error {
	if !_regex_RegisterCameraRequest_Id.MatchString(this.Id) {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`wrong format`))
	}
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`must not be an empty string`))
	}
	return nil
}
func (this *GetCameraRequest) Validate() error {
	return nil
}
func (this *DeleteCameraRequest) Validate() error {
	return nil
}
func (this *UpdateCameraRequest) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`must not be an empty string`))
	}
	return nil
}
func (this *GetCamerasListResponse) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
func (this *CameraItemResponse) Validate() error {
	if this.RegisteredAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RegisteredAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RegisteredAt", err)
		}
	}
	return nil
}
func (this *Camera) Validate() error {
	if this.RegisteredAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RegisteredAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RegisteredAt", err)
		}
	}
	if this.Stream != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Stream); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Stream", err)
		}
	}
	if this.State != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.State); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("State", err)
		}
	}
	return nil
}

var _regex_CreateCameraStreamRequest_CameraId = regexp.MustCompile("^[a-fA-F0-9]{12}")

func (this *CreateCameraStreamRequest) Validate() error {
	if !_regex_CreateCameraStreamRequest_CameraId.MatchString(this.CameraId) {
		return github_com_mwitkow_go_proto_validators.FieldError("CameraId", fmt.Errorf(`wrong format`))
	}
	if !(this.Framerate > 19) {
		return github_com_mwitkow_go_proto_validators.FieldError("Framerate", fmt.Errorf(`must be between 20 and 30 fps`))
	}
	if !(this.Framerate < 31) {
		return github_com_mwitkow_go_proto_validators.FieldError("Framerate", fmt.Errorf(`must be between 20 and 30 fps`))
	}
	if !(this.Bitrate > 9999) {
		return github_com_mwitkow_go_proto_validators.FieldError("Bitrate", fmt.Errorf(`must be between 10.000K and 50.000K`))
	}
	if !(this.Bitrate < 50001) {
		return github_com_mwitkow_go_proto_validators.FieldError("Bitrate", fmt.Errorf(`must be between 10.000K and 50.000K`))
	}
	return nil
}
func (this *GetCameraStreamsListRequest) Validate() error {
	return nil
}
func (this *CompleteCameraStreamRequest) Validate() error {
	return nil
}
func (this *Stream) Validate() error {
	if this.StartedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.StartedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("StartedAt", err)
		}
	}
	if this.FinishedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.FinishedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("FinishedAt", err)
		}
	}
	return nil
}
func (this *Streams) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}

var _regex_UpdateStateCameraRequest_CameraId = regexp.MustCompile("^[a-fA-F0-9]{12}")

func (this *UpdateStateCameraRequest) Validate() error {
	if !_regex_UpdateStateCameraRequest_CameraId.MatchString(this.CameraId) {
		return github_com_mwitkow_go_proto_validators.FieldError("CameraId", fmt.Errorf(`wrong format`))
	}
	if this.State != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.State); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("State", err)
		}
	}
	return nil
}
