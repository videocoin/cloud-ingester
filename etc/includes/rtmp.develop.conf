rtmp_auto_push on;
rtmp_auto_push_reconnect 1000ms;

rtmp {
    server {
        listen 1935;

        chunk_size 4096;
        max_message 16M;

        access_log /dev/stdout;

        application camera {
            live on;
            meta copy;

            drop_idle_publisher 10s;

            record_path /tmp/records;
            record_unique on;

            notify_method         get;
            notify_update_timeout 1s;
            notify_update_strict  on;
            notify_send_redirect  on;
            notify_relay_redirect on;

            # on_connect       http://localhost/hook;
            on_play          http://localhost/hook;
            on_playlist      http://localhost/hook;
            on_publish       http://localhost/hook/publish;
            on_done          http://localhost/hook;
            on_play_done     http://localhost/hook;
            on_publish_done  http://localhost/hook/publish_done;
            # on_record_done   http://localhost/hook/record_done;
            on_update        http://localhost/hook;

            # recorder stream {
            #     record all;
            #     record_max_size 64000M;
            #     exec_record_done bash -c "\
            #         ffmpeg -y -i $path -c copy -f mp4 $path.mp4 && \
            #         curl 'http://localhost/hook/record_done?call=record_done&recorder=stream&path=$path.mp4&name=$name' \
            #     ";
            # }

            recorder preview {
                record keyframes;
                record_max_frames 10;
                record_interval 5s;
                record_suffix .thumb;

                exec_record_done ffmpeg -i $path -vframes 1 -an -f image2 -s 640x480 -y /tmp/records/$name.jpg;
            }

            hls on;
            hls_type live;
            hls_fragment 2s;
            hls_playlist_length 60s;
            hls_path /tmp/hls;
            hls_cleanup off;
            hls_continuous off;
            hls_nested on;
        }
    }
}
